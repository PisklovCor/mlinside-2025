package com.cryptoagents.model;

import jakarta.persistence.*;
import lombok.Getter;
import lombok.Setter;
import java.math.BigDecimal;
import java.util.List;

/**
 * Entity class for analyst agent results.
 * 
 * Contains technical analysis data, market trends, and trading signals
 * generated by the Analyst Agent.
 */
@Getter
@Setter
@Entity
@Table(name = "analyst_reports")
@DiscriminatorValue("ANALYST")
public class AnalystReport extends AnalysisResult {
    
    @Enumerated(EnumType.STRING)
    @Column(name = "market_trend", length = 20)
    private MarketTrend marketTrend;
    
    @Column(name = "technical_indicators", columnDefinition = "TEXT")
    private String technicalIndicators;
    
    @Column(name = "support_level", precision = 19, scale = 8)
    private BigDecimal supportLevel;
    
    @Column(name = "resistance_level", precision = 19, scale = 8)
    private BigDecimal resistanceLevel;
    
    @Column(name = "current_price", precision = 19, scale = 8)
    private BigDecimal currentPrice;
    
    @Column(name = "price_target", precision = 19, scale = 8)
    private BigDecimal priceTarget;
    
    @Enumerated(EnumType.STRING)
    @Column(name = "signal_strength")
    private SignalStrength signalStrength;
    
    @Column(name = "volume_analysis", columnDefinition = "TEXT")
    private String volumeAnalysis;
    
    @Column(name = "momentum_indicators", columnDefinition = "TEXT")
    private String momentumIndicators;
    
    @Column(name = "pattern_recognition", columnDefinition = "TEXT")
    private String patternRecognition;
    
    @Column(name = "time_horizon_days")
    private Integer timeHorizonDays;
    
    // Constructors
    public AnalystReport() {
        super();
    }
    
    public AnalystReport(String ticker) {
        super(ticker, "ANALYST_AGENT");
    }
    
    /**
     * Enumeration for market trend directions.
     */
    public enum MarketTrend {
        BULLISH,
        BEARISH,
        SIDEWAYS,
        VOLATILE,
        UNCERTAIN
    }
    
    /**
     * Enumeration for signal strength levels.
     */
    public enum SignalStrength {
        VERY_WEAK,
        WEAK,
        MODERATE,
        STRONG,
        VERY_STRONG
    }
} 