name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Сборка проекта
    runs-on: ubuntu-latest

    steps:
      - name: Checkout код
        uses: actions/checkout@v4

      - name: Настройка JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Кэширование Maven зависимостей
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Компиляция проекта
        run: |
          cd CryptoMultiagent
          mvn clean compile

      - name: Создание JAR файла
        run: |
          cd CryptoMultiagent
          mvn package -DskipTests

      - name: Загрузка артефактов сборки
        uses: actions/upload-artifact@v4
        with:
          name: jar-artifact
          path: CryptoMultiagent/target/*.jar
          retention-days: 30

  test:
    name: Тестирование
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout код
        uses: actions/checkout@v4

      - name: Настройка JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Кэширование Maven зависимостей
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Скачивание артефактов сборки
        uses: actions/download-artifact@v4
        with:
          name: jar-artifact
          path: CryptoMultiagent/target/

      - name: Запуск тестов
        run: |
          cd CryptoMultiagent
          mvn test
        env:
          SPRING_PROFILES_ACTIVE: test

      - name: Загрузка отчетов о тестах
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-reports
          path: CryptoMultiagent/target/surefire-reports/
          retention-days: 30

  docker-build:
    name: Сборка Docker образа
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout код
        uses: actions/checkout@v4

      - name: Скачивание артефактов сборки
        uses: actions/download-artifact@v4
        with:
          name: jar-artifact
          path: CryptoMultiagent/target/

      - name: Настройка Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Сборка Docker образа
        run: |
          cd CryptoMultiagent
          docker build -f docker/Dockerfile -t crypto-multiagent:latest .
          docker tag crypto-multiagent:latest crypto-multiagent:${{ github.sha }}

      - name: Сохранение Docker образа
        run: |
          cd CryptoMultiagent
          docker save crypto-multiagent:latest | gzip > crypto-multiagent.tar.gz

      - name: Загрузка Docker образа
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: CryptoMultiagent/crypto-multiagent.tar.gz
          retention-days: 30

  docker-push:
    name: Push в Docker Hub
    runs-on: ubuntu-latest
    needs: docker-build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout код
        uses: actions/checkout@v4

      - name: Скачивание Docker образа
        uses: actions/download-artifact@v4
        with:
          name: docker-image
          path: .

      - name: Загрузка Docker образа
        run: |
          gunzip -c crypto-multiagent.tar.gz | docker load

      - name: Авторизация в Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push образа в Docker Hub
        run: |
          # Получаем и очищаем имя пользователя
          DOCKER_USER="${{ secrets.DOCKER_USERNAME }}"
          echo "Docker username: $DOCKER_USER"
          
          # Тегируем образ с именем пользователя Docker Hub
          docker tag crypto-multiagent:latest "${DOCKER_USER}/crypto-multiagent:latest"
          docker tag crypto-multiagent:latest "${DOCKER_USER}/crypto-multiagent:${{ github.sha }}"
          
          # Пушим образы в Docker Hub
          docker push "${DOCKER_USER}/crypto-multiagent:latest"
          docker push "${DOCKER_USER}/crypto-multiagent:${{ github.sha }}"